import { useEffect } from "react";
import { useSelector } from "react-redux";
import { Box, Text, Code, useToast } from "@chakra-ui/react";

interface RootState {
  zkp: {
    proof: string;
    error: string | null;
  };
}

const ProofDisplay: React.FC = () => {
  const toast = useToast();
  const proof = useSelector((state: RootState) => state.zkp.proof);
  const error = useSelector((state: RootState) => state.zkp.error);

  // const proofPlaceHolder =
  //   "0x60806040526004361061003f5760003560e01c806329723511146100445780635234641214610059578063d54cefc11461006c578063f9c028ec1461007f575b600080fd5b610057610052366004610815565b610092565b005b610057610067366004610955565b610153565b61005761007a3660046109be565b61035a565b61005761008d366004610a3a565b610469565b60005460ff16156100be5760405162461bcd60e51b81526004016100b590610aad565b60405180910390fd5b6000805460ff191660011781556040516001600160a01b038516913480156108fc02929091818181858888f19350505050158015610100573d6000803e3d6000fd5b50826001600160a01b03167f69ca02dd4edd7bf0a4abb9ed3b7af3f14778db5d61921c7dc7cd545266326de23460405161013c91815260200190565b60405180910390a250506000805460ff1916905550565b60005460ff16156101765760405162461bcd60e51b81526004016100b590610aad565b6000805460ff19166001179055805182146101a35760405162461bcd60e51b81526004016100b590610ad5565b346000805b848110156102fa578381815181106101c2576101c2610b22565b60200260200101519150818310156102135760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742042616c616e636560601b60448201526064016100b5565b61021d8284610b4e565b925085858281811061023157610231610b22565b90506020020160208101906102469190610b67565b6001600160a01b03166108fc839081150290604051600060405180830381858888f1935050505015801561027e573d6000803e3d6000fd5b5085858281811061029157610291610b22565b90506020020160208101906102a69190610b67565b6001600160a01b03167f69ca02dd4edd7bf0a4abb9ed3b7af3f14778db5d61921c7dc7cd545266326de2836040516102e091815260200190565b60405180910390a2806102f281610b8b565b9150506101a8565b5081156103495760405162461bcd60e51b815260206004820152601a60248201527f546865726520617265206d616e7920657874726120636f73747300000000000060448201526064016100b5565b50506000805460ff19169055505050565b60005460ff161561037d5760405162461bcd60e51b81526004016100b590610aad565b6000805460ff1916600117905534156103cd5760405162461bcd60e51b8152602060048201526012602482015271115d1a195c881b9bdd081858d8d95c1d195960721b60448201526064016100b5565b805182146103ed5760405162461bcd60e51b81526004016100b590610ad5565b60005b82811015610349576104573385858481811061040e5761040e610b22565b90506020020160208101906104239190610b67565b84848151811061043557610435610b22565b6020026020010151886001600160a01b03166104ed909392919063ffffffff16565b8061046181610b8b565b9150506103f0565b60005460ff161561048c5760405162461bcd60e51b81526004016100b590610aad565b6000805460ff1916600117905534156104dc5760405162461bcd60e51b8152602060048201526012602482015271115d1a195c881b9bdd081858d8d95c1d195960721b60448201526064016100b5565b6103496001600160a01b0386163386865b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261054790859061054d565b50505050565b60006105a2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166106249092919063ffffffff16565b80519091501561061f57808060200190518101906105c09190610ba4565b61061f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016100b5565b505050565b6060610633848460008561063b565b949350505050565b60608247101561069c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016100b5565b600080866001600160a01b031685876040516106b89190610bea565b60006040518083038185875af1925050503d80600081146106f5576040519150601f19603f3d011682016040523d82523d6000602084013e6106fa565b606091505b509150915061070b87838387610716565b979650505050505050565b6060831561078557825160000361077e576001600160a01b0385163b61077e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044";
  const proofPlaceHolder = "-";
  useEffect(() => {
    if (error) {
      toast({
        title: "Error",
        description: "This proof has not been generated yet",
        status: "error",
        duration: 5000,
        isClosable: true,
      });
    }
  }, [error, toast]);

  return (
    <Box
      width="1280px"
      p={5}
      bg="white"
      border="1.5px solid black"
      marginBottom="20px"
      padding={6}
    >
      <Text textAlign="left" variant="description" marginBottom="8px">
        Proof
      </Text>
      <Code
        width="100%"
        p={0}
        overflowY="auto"
        maxHeight="200px"
        whiteSpace="pre-wrap"
        bg="white"
        textAlign="left"
      >
        {proof || proofPlaceHolder}
      </Code>
    </Box>
  );
};

export default ProofDisplay;
